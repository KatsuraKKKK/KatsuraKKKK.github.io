{
  "title": "NOTE",
  "cells": [
    {
      "type": "text",
      "data": "<h3 id=\"decorator-proxy-pattern-\">Decorator与Proxy pattern的不同</h3>\n<p>装饰器模式关注于在一个对象上动态的添加方法，然而代理模式关注于控制对对象的访问。换句话 说，用代理模式，代理类（proxy class）可以对它的客户隐藏一个对象的具体信息。因此，当使用代理模式的时候，我们常常在一个代理类中创建一个对象的实例。并且，当我们使用装饰器模 式的时候，我们通常的做法是将原始对象作为一个参数传给装饰者的构造器。</p><p><br></p><div>volatie 对重排序的影响</div><div><img width=\"691\" height=\"262\" src=\"quiver-image-url/1122A6AE9F869704636D319B25BACCCA.png\" id=\"en-media:image/png:1122a6ae9f869704636d319b25baccca:none:none\" style=\"cursor: default;\"></div><div><br></div><div><img width=\"542\" height=\"448\" src=\"quiver-image-url/113FF14E8312F4C3F552D96488867DC6.png\" id=\"en-media:image/png:113ff14e8312f4c3f552d96488867dc6:none:none\" style=\"cursor: default;\"></div>\n"
    }
  ]
}