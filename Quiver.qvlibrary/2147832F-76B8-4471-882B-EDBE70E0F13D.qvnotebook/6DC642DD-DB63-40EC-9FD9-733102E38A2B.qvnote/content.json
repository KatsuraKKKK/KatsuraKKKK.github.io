{
  "title": "Untitled Note",
  "cells": [
    {
      "type": "text",
      "data": "<div class=\"titlepage\"><h3 class=\"title\">不要超过 32 GB！</h3></div><p>这里有另外一个原因不分配大内存给 Elasticsearch。事实上<a id=\"id-1.10.4.11.10.2.1\" class=\"indexterm\" href=\"https://elasticsearch.cn/book/elasticsearch_definitive_guide_2.x/heap-sizing.html#id-1.10.4.11.10.2.1\"></a>\n<a id=\"id-1.10.4.11.10.2.2\" class=\"indexterm\" href=\"https://elasticsearch.cn/book/elasticsearch_definitive_guide_2.x/heap-sizing.html#id-1.10.4.11.10.2.2\"></a>\n<a id=\"id-1.10.4.11.10.2.3\" class=\"indexterm\" href=\"https://elasticsearch.cn/book/elasticsearch_definitive_guide_2.x/heap-sizing.html#id-1.10.4.11.10.2.3\"></a><a id=\"id-1.10.4.11.10.2.4\" class=\"indexterm\" href=\"https://elasticsearch.cn/book/elasticsearch_definitive_guide_2.x/heap-sizing.html#id-1.10.4.11.10.2.4\"></a>，\nJVM 在内存小于 32 GB 的时候会采用一个内存对象指针压缩技术。</p><p>在 Java 中，所有的对象都分配在堆上，并通过一个指针进行引用。\n普通对象指针（OOP）指向这些对象，通常为 CPU <span class=\"emphasis\"><em>字长</em></span> 的大小：32 位或 64 位，取决于你的处理器。指针引用的就是这个 OOP 值的字节位置。</p><p>对于 32 位的系统，意味着堆内存大小最大为 4 GB。对于 64 位的系统，\n可以使用更大的内存，但是 64 位的指针意味着更大的浪费，因为你的指针本身大了。更糟糕的是，\n更大的指针在主内存和各级缓存（例如 LLC，L1 等）之间移动数据的时候，会占用更多的带宽。</p><p>Java 使用一个叫作  <a class=\"ulink\" href=\"https://wikis.oracle.com/display/HotSpotInternals/CompressedOops\" target=\"_top\">内存指针压缩（compressed oops）</a><a id=\"id-1.10.4.11.10.5.2\" class=\"indexterm\" href=\"https://elasticsearch.cn/book/elasticsearch_definitive_guide_2.x/heap-sizing.html#id-1.10.4.11.10.5.2\"></a>的技术来解决这个问题。\n它的指针不再表示对象在内存中的精确位置，而是表示 <span class=\"emphasis\"><em>偏移量</em></span> 。<a id=\"id-1.10.4.11.10.5.4\" class=\"indexterm\" href=\"https://elasticsearch.cn/book/elasticsearch_definitive_guide_2.x/heap-sizing.html#id-1.10.4.11.10.5.4\"></a>这意味着 32 位的指针可以引用 40 亿个 <span class=\"emphasis\"><em>对象</em></span> ，\n而不是 40 亿个字节。最终，\n也就是说堆内存增长到 32 GB 的物理内存，也可以用 32 位的指针表示。</p><p>一旦你越过那个神奇的 ~32 GB 的边界，指针就会切回普通对象的指针。\n每个对象的指针都变长了，就会使用更多的 CPU 内存带宽，也就是说你实际上失去了更多的内存。事实上，当内存到达\n40–50 GB 的时候，有效内存才相当于使用内存对象指针压缩技术时候的 32 GB 内存。</p><p>这段描述的意思就是说：即便你有足够的内存，也尽量不要\n超过 32 GB。因为它浪费了内存，降低了 CPU 的性能，还要让 GC 应对大内存。</p>"
    }
  ]
}